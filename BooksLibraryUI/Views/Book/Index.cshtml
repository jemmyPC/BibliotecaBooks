@model List<Models.Model.Book>


<h1> Books List </h1>

<div class="table-responsive">
    <table class="table" id="tabla-contenido">
        <thead>
            <tr>
                <th>ISBN</th>
                <th>Autor</th>
                <th>Title</th>
                <th>NumPages</th>
                <th>Edition</th>
                <th>Description</th>
                <th>Quantity</th>
                <th>Edit</th>
                <th>Details</th>
                <th>Delete</th>
                <th></th>

            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>


<div class="modal modal-primary fade" id="agregarModal" tabindex="-1" role="dialog" aria-labelledby="agregarModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h5 class="modal-title" id="agregarModalLabel">Nuevo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalcuerpo"></div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary " id="btnGuardarModal">Guardar</button>

            </div>
        </div>
    </div>
</div>

<div class="modal modal-success fade" id="editarModal" tabindex="-1" role="dialog" aria-labelledby="editarModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h5 class="modal-title" id="editarModalLabel">Edith</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" id="modaleditarcuerpo">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <button type="submit" class="btn btn-primary " id="btnEditarModal">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">

        // Globals
        let table;

        window.onload = function () {
           document.getElementById("btnGuardarModal").addEventListener("click", function () { Guardar(); })
           document.getElementById("btnEditarModal").addEventListener("click", function () { Editar(); })
        }

        // Limpiar campos del modal
        function LimpiarModales() {
            const bodies = document.querySelectorAll("modal-body");
            for (i = 0; i < bodies.length; i++) { bodies[i].innerHTML = ""; }
        }


           // Limpiar Errores del modal
        function LimpiarErrors() {
            document.getElementById("errQuantity").innerText = "";
            document.getElementById("errISBN").innerText = "";
        }



// Abrir Modal Nuevo
        function ModalAbrir(action) {
            fetch("@Url.Action("Agregar", "Book")", {
                method: "GET"
            }).then(function (response) {
                if (response.ok) {
                    response.text().then(function (text) {
                        LimpiarModales();
                        document.querySelector("#modalcuerpo").innerHTML = text;
                        $("#agregarModal").modal(action);
                    })
                }
            });
        }



// Abrir Modal Editar
        function MostrarEditar(id) {
            fetch("@Url.Action("Edith","Book")/" + id, {
                method: "GET"
            }).then(function (response) {
                if (response.ok) {
                    response.text().then(function (text) {
                       LimpiarModales();
                        document.querySelector("#modaleditarcuerpo").innerHTML = text;
                        $("#editarModal").modal("show");
                    })
                }
            });
        }


        
                 // Delete
        function Delete(id) {
            var data = {};
           
            fetch("@Url.Action("Delete","Book")/" + id, {
                method: "DElETE",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            }).then(function (response) {
                if (response.ok) {
                 
                    location.reload(true);
                }
                bootbox.alert("Success Book Delete!");
            });
        }






// Editar Data Guardar
        function Editar() {
            const data = {};
            data["Id"] = $("#Id").val();
            data["Description"] = $("#Description").val();

            fetch("https://localhost:44316/api/book", {
                method: "PUT",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            }).then(function (response) {
                if (response.ok) {
                    $("#editarModal").modal("hide");
                    location.reload(true);
                }
                bootbox.alert("Success Book Edith !");
            });
        }


  // Guardar Data Nuevo
        function Guardar() {
            const data = {};
            data["ISBN"] = document.querySelector("#ISBN").value;
            data["Autor"] = document.querySelector("#Autor").value;
            data["Title"] = document.querySelector("#Title").value;
            data["NumPages"] = document.querySelector("#NumPages").value;
            data["Edition"] = document.querySelector("#Edition").value;
            data["Description"] = document.querySelector("#Description").value;
            data["Quantity"] = document.querySelector("#Quantity").value;

            fetch("https://localhost:44316/api/book", {
                method: "POST",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            }).then(function (response) {


                response.json().then(function (msg) {
                    if (msg["OK"] == "OK") {
                        ModalAbrir("hide");                         
                    } else {
                        LimpiarErrors();
                        for (var k in msg) {
                            document.getElementById("err" + k).innerText = msg[k];
                        }
                    }
                    location.reload(true);
                });
                bootbox.alert("Success Book Save!");
            });
        }


        $(document).ready(function () {
            var table = $('#tabla-contenido').DataTable({
                ajax:
                {
                    url: 'https://localhost:44316/api/book',
                    type: 'GET',
                    datatype: 'JSON',
                    dataSrc: ''
                },
                columns: [
                    { data: 'isbn' },
                    { data: 'autor' },
                    { data: 'title' },
                    { data: 'numPages' },
                    { data: 'edition' },
                    { data: 'description' },
                    { data: 'quantity' },

                    {
                        render: function (data, type, row) {
                            return `<a class= btn btn-primary onClick="MostrarEditar(${row.id})"> Editar</a>`
                        },
                    },
                    {
                        render: (data, type, row) => {
                            return `<a class="btn btn-info" href="Book/Details/${row.id}">Details</a>`
                        },
                    },
                    {
                        render: (data, type, row) => {
                            return `<a class="btn btn-info" onClick="Delete(${row.id})">Delete</a>`
                        },
                    },
                    {
                        render: (data, type, row) => {
                            return `<a class="btn btn-info" onClick="AddBook(${row.id})">Add Book </a>`
                        },
                    }

                ],

                select: true,
                dom: 'Bfrtip',
                buttons: [
                    {
                        text: 'Nuevo',
                        action: function () {
                            ModalAbrir("show");
                        }
                    },
                    'copy', 'excel', 'pdf'
                ]
            });
        });
    </script>
}
